#include<stdio.h>
#include<unistd.h>
#include<sys/types.h>
#include<sys/wait.h>
#include<pthread.h>

int count=0;
pthread_mutex_t lock;

void *func1(void *t1)
{
sleep(10);
pthread_mutex_lock(&lock);
printf("\ni m inside thread1\n ") ;
for(int i=0;i<50;i++)
{
// i=i+1;
count++;
}
printf("\ncount=%d\n",count);
pthread_mutex_unlock(&lock);
}
void  *func2(void *t2)
{

// sleep(10);
pthread_mutex_lock(&lock);
printf("\ni m inside thread2\n ") ;
for(int i=0;i<50;i++)
{
// i=i+1;
count++;
}
printf("\ncount=%d\n",count);
pthread_mutex_unlock(&lock);

}

int main()
{
pthread_t tid1,tid2;
pthread_create(&tid1,NULL,func1,NULL);
pthread_create(&tid2,NULL,func2,NULL);
pthread_join(tid1,NULL);
pthread_join(tid2,NULL);
return 0;
}
